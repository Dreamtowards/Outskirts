
simplex[4]

d = b1.pos-b2.pos = vec3(-1)

#Itr 1:
A = support(b1, b2, d) = vec3(-1) - vec3(2) = vec3(-3)
dot=1 pass
case 1:
d.negate() = vec3(1)
=================================
A=vec3(-3)       d=vec3(1)

#Itr 2:
B = support(b1, b2, d) = vec3(1) - vec3(0) = vec3(1)
dot=1 pass
case 2:
AB = vec3(4)
AO = vec3(3)
AB x AO x AB = (ZERO)UNIT_X x AB = vec3(0, -4, 4)
=================================
A=vec3(-3), B=vec3(1)       d=vec3(0, -4, 4)

#Itr 3:
C = support(b1, b2, d) = vec3(1, -1, 1) - vec3(2, 2, 0) = vec3(-1, -3, 1)
dot=0.42 pass
case 3:
AB=vec3(4)
AC=vec3(2, 0, 4)
AO=(3)
AB x AC = vec3(16, -8, -8)  (assign to d
vec3(16, -8, -8) dot AO = 0, can do not negate.
=================================
A=vec3(-3), B=vec3(1), C=vec3(-1, -3, 1)       d=vec3(16, -8, -8)

#Itr 4:
D = support(b1, b2, d) = vec3(1, -1, -1) - vec3(0, 2, 2) = vec3(1, -3, -3)
dot=0.74 pass
case 4:
AD=(4, 0, 0)
BD=(0, -4, -4)
CD=(2, 0, -4)
DO=(-1, 3, 3)
ABDNorm=AD x BD = (0, 16, -16)
ABDNorm x DO = 0

BCDNorm=BD x CD =